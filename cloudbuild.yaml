steps:
  # Build the first Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/kubernetes-428712/us-central1-docker.pkg.dev/kubernetes-428712/implementation-repository/container1:v1.13']

  # Push the first Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/kubernetes-428712/us-central1-docker.pkg.dev/kubernetes-428712/implementation-repository/container1:v1.13']
    env:
      - 'DOCKER_BUILDKIT=1'

  # Build the second Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/kubernetes-428712/us-central1-docker.pkg.dev/kubernetes-428712/implementation-repository/container2:latest', 'Implementation/container2']

  # Push the second Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/kubernetes-428712/us-central1-docker.pkg.dev/kubernetes-428712/implementation-repository/container2:latest']
    env:
      - 'DOCKER_BUILDKIT=1'

  # Deploy to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [ 'apply', '-f', 'deployment1.yaml' ]  # Deploy the image to GKE Cluster
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=k8s-gke-cluster'
      - 'CLOUDSDK_CORE_PROJECT=kubernetes-428712'

    # Deploy to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [ 'apply', '-f', 'deployment2.yaml' ]  # Deploy the image to GKE Cluster
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=k8s-gke-cluster'
      - 'CLOUDSDK_CORE_PROJECT=kubernetes-428712'

images:
  - 'gcr.io/kubernetes-428712/us-central1-docker.pkg.dev/kubernetes-428712/implementation-repository/container1:v1.13'
  - 'gcr.io/kubernetes-428712/us-central1-docker.pkg.dev/kubernetes-428712/implementation-repository/container2:latest'

options:
  logging: # Ensure that Cloud Logging is enabled
    - 'CLOUD_LOGGING_ONLY'  # Or 'NONE' if you do not need logging
  env:
    - 'logsBucket=k8logsbucket'